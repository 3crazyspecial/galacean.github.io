(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{496:function(n,e,r){"use strict";r.r(e),e.default='import { OrbitControl } from "@oasis-engine/controls";\r\nimport * as dat from "dat.gui";\r\nimport {\r\n  AssetType,\r\n  BlinnPhongMaterial,\r\n  Camera,\r\n  MeshRenderer,\r\n  PrimitiveMesh,\r\n  RenderFace,\r\n  Script,\r\n  SystemInfo,\r\n  Texture2D,\r\n  Vector3,\r\n  WebGLEngine\r\n} from "oasis-engine";\r\n\r\ninit();\r\n\r\nfunction init(): void {\r\n  // Create engine object\r\n  const engine = new WebGLEngine("o3-demo");\r\n  engine.canvas.width = window.innerWidth * SystemInfo.devicePixelRatio;\r\n  engine.canvas.height = window.innerHeight * SystemInfo.devicePixelRatio;\r\n\r\n  // Load texture\r\n  engine.resourceManager\r\n    .load<Texture2D>({\r\n      url: "https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Umw_RJGiZLYAAAAAAAAAAAAAARQnAQ",\r\n      type: AssetType.Texture2D\r\n    })\r\n    .then((texture) => {\r\n      const scene = engine.sceneManager.activeScene;\r\n      const rootEntity = scene.createRootEntity();\r\n\r\n      // Create camera\r\n      const cameraEntity = rootEntity.createChild("Camera");\r\n      cameraEntity.transform.position = new Vector3(0, 0, 20);\r\n      cameraEntity.addComponent(Camera);\r\n      cameraEntity.addComponent(OrbitControl);\r\n\r\n      // Create plane\r\n      const entity = rootEntity.createChild();\r\n      const renderer = entity.addComponent(MeshRenderer);\r\n      const mesh = PrimitiveMesh.createPlane(engine, 10, 10);\r\n      const material = new BlinnPhongMaterial(engine);\r\n\r\n      texture.anisoLevel = 16;\r\n      material.renderFace = RenderFace.Double;\r\n      material.emissiveTexture = texture;\r\n      material.emissiveColor.setValue(1, 1, 1, 1);\r\n\r\n      renderer.mesh = mesh;\r\n      renderer.setMaterial(material);\r\n\r\n      // Add animation script\r\n      const animationScript = rootEntity.addComponent(AnimateScript);\r\n\r\n      // Add data GUI\r\n      const guiData = addDataGUI(material, animationScript);\r\n      animationScript.guiData = guiData;\r\n      animationScript.material = material;\r\n\r\n      // Run engine\r\n      engine.run();\r\n    });\r\n}\r\n\r\n/**\r\n * Add data GUI.\r\n */\r\nfunction addDataGUI(material: BlinnPhongMaterial, animationScript: AnimateScript): any {\r\n  const gui = new dat.GUI();\r\n  const guiData = {\r\n    tilingX: 1,\r\n    tilingY: 1,\r\n    offsetX: 0,\r\n    offsetY: 0,\r\n    reset: function () {\r\n      guiData.tilingX = 1;\r\n      guiData.tilingY = 1;\r\n      guiData.offsetX = 0;\r\n      guiData.offsetY = 0;\r\n      material.tilingOffset.setValue(1, 1, 0, 0);\r\n    },\r\n    pause: function () {\r\n      animationScript.enabled = false;\r\n    },\r\n    resume: function () {\r\n      animationScript.enabled = true;\r\n    }\r\n  };\r\n\r\n  gui\r\n    .add(guiData, "tilingX", 0, 10)\r\n    .onChange((value: number) => {\r\n      material.tilingOffset.x = value;\r\n    })\r\n    .listen();\r\n  gui\r\n    .add(guiData, "tilingY", 0, 10)\r\n    .onChange((value: number) => {\r\n      material.tilingOffset.y = value;\r\n    })\r\n    .listen();\r\n  gui\r\n    .add(guiData, "offsetX", 0, 1)\r\n    .onChange((value: number) => {\r\n      material.tilingOffset.z = value;\r\n    })\r\n    .listen();\r\n  gui\r\n    .add(guiData, "offsetY", 0, 1)\r\n    .onChange((value: number) => {\r\n      material.tilingOffset.w = value;\r\n    })\r\n    .listen();\r\n  gui.add(guiData, "reset").name("\u91cd\u7f6e");\r\n  gui.add(guiData, "pause").name("\u6682\u505c\u52a8\u753b");\r\n  gui.add(guiData, "resume").name("\u7ee7\u7eed\u52a8\u753b");\r\n\r\n  return guiData;\r\n}\r\n\r\n/**\r\n * Animation script.\r\n */\r\nclass AnimateScript extends Script {\r\n  guiData: any;\r\n  material: BlinnPhongMaterial;\r\n\r\n  /**\r\n   * The main loop, called frame by frame.\r\n   * @param deltaTime - The deltaTime when the script update.\r\n   */\r\n  onUpdate(deltaTime: number): void {\r\n    const { material, guiData } = this;\r\n    material.tilingOffset.x = guiData.tilingX = ((guiData.tilingX - 1 + deltaTime * 0.001) % 9) + 1;\r\n    material.tilingOffset.y = guiData.tilingY = ((guiData.tilingY - 1 + deltaTime * 0.001) % 9) + 1;\r\n  }\r\n}\r\n'}}]);