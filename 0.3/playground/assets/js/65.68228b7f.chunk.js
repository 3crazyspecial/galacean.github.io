(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{494:function(n,e,r){"use strict";r.r(e),e.default='/**\r\n * \u672c\u793a\u4f8b\u5c55\u793a\u5982\u4f55\u4f7f\u7528\u51e0\u4f55\u4f53\u6e32\u67d3\u5668\u529f\u80fd\u3001\u5982\u4f55\u521b\u5efa\u51e0\u4f55\u4f53\u8d44\u6e90\u5bf9\u8c61\u3001\u5982\u4f55\u521b\u5efa\u6750\u8d28\u5bf9\u8c61\r\n */\r\nimport { FreeControl } from "@oasis-engine/controls";\r\nimport {\r\n  Camera,\r\n  BlinnPhongMaterial,\r\n  MeshRenderer,\r\n  MeshTopology,\r\n  WebGLEngine,\r\n  Color,\r\n  PrimitiveMesh\r\n} from "oasis-engine";\r\n\r\nconst engine = new WebGLEngine("o3-demo");\r\nengine.canvas.resizeByClientSize();\r\nconst scene = engine.sceneManager.activeScene;\r\nconst rootNode = scene.createRootEntity("root");\r\n\r\n// \u5728\u573a\u666f\u4e2d\u521b\u5efa\u76f8\u673a\u8282\u70b9\u3001\u914d\u7f6e\u4f4d\u7f6e\u548c\u76ee\u6807\u65b9\u5411\r\nconst cameraNode = rootNode.createChild("camera_node");\r\ncameraNode.transform.setPosition(0, 0, 20);\r\n\r\nconst camera = cameraNode.addComponent(Camera);\r\ncamera.farClipPlane = 2000;\r\n\r\nconst controler = cameraNode.addComponent(FreeControl);\r\ncontroler.movementSpeed = 100;\r\ncontroler.rotateSpeed = 1;\r\n\r\nconst cuboid = PrimitiveMesh.createCuboid(engine, 50, 50, 50);\r\nconst material = new BlinnPhongMaterial(engine);\r\nmaterial.emissiveColor = new Color(0.5, 0.6, 0.6, 1);\r\n\r\nconst groundGeometry = PrimitiveMesh.createPlane(engine, 2000, 2000, 100, 100);\r\ngroundGeometry.subMesh.topology = MeshTopology.LineStrip;\r\nconst groundMaterial = new BlinnPhongMaterial(engine);\r\ngroundMaterial.emissiveColor = new Color(1, 1, 1, 1);\r\n\r\n// create meshes in scene\r\nfor (let i = 0; i < 100; i++) {\r\n  let cube = rootNode.createChild("cube");\r\n  cube.transform.setPosition(Math.random() * 2000 - 1000, Math.random() * 200, Math.random() * 2000 - 1000);\r\n  const cubeRenderer = cube.addComponent(MeshRenderer);\r\n  cubeRenderer.mesh = cuboid;\r\n  cubeRenderer.setMaterial(material);\r\n}\r\n\r\n// Ground\r\nconst ground = rootNode.createChild("ground");\r\nground.transform.setPosition(0, -25, 0);\r\nground.transform.rotate(-90, 0, 0);\r\nconst groundRender = ground.addComponent(MeshRenderer);\r\ngroundRender.mesh = groundGeometry;\r\ngroundRender.setMaterial(groundMaterial);\r\n\r\n// Run engine\r\nengine.run();\r\n'}}]);