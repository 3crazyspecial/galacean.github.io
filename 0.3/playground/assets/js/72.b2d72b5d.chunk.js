(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{501:function(n,e,r){"use strict";r.r(e),e.default='import { OrbitControl } from "@oasis-engine/controls";\r\nimport * as dat from "dat.gui";\r\nimport {\r\n  AmbientLight,\r\n  AssetType,\r\n  Camera,\r\n  Color,\r\n  DirectLight,\r\n  EnvironmentMapLight,\r\n  GLTFResource,\r\n  SkyBox,\r\n  SystemInfo,\r\n  TextureCubeMap,\r\n  Vector3,\r\n  WebGLEngine\r\n} from "oasis-engine";\r\n\r\n//-- create engine object\r\nlet engine = new WebGLEngine("o3-demo");\r\nengine.canvas.width = window.innerWidth * SystemInfo.devicePixelRatio;\r\nengine.canvas.height = window.innerHeight * SystemInfo.devicePixelRatio;\r\n\r\nlet scene = engine.sceneManager.activeScene;\r\nconst rootEntity = scene.createRootEntity();\r\n\r\nconst color2glColor = (color) => new Color(color[0] / 255, color[1] / 255, color[2] / 255);\r\nconst glColor2Color = (color) => new Color(color[0] * 255, color[1] * 255, color[2] * 255);\r\nconst gui = new dat.GUI();\r\ngui.domElement.style = "position:absolute;top:0px;left:50vw";\r\n\r\nlet envLightNode = rootEntity.createChild("env_light");\r\nlet envLight = envLightNode.addComponent(EnvironmentMapLight);\r\nlet envFolder = gui.addFolder("EnvironmentMapLight");\r\nenvFolder.add(envLight, "enabled");\r\nenvFolder.add(envLight, "specularIntensity", 0, 1);\r\nenvFolder.add(envLight, "diffuseIntensity", 0, 1);\r\n\r\nlet directLightColor = { color: [255, 255, 255] };\r\nlet directLightNode = rootEntity.createChild("dir_light");\r\nlet directLight = directLightNode.addComponent(DirectLight);\r\ndirectLight.color = new Color(1, 1, 1);\r\nlet dirFolder = gui.addFolder("DirectionalLight1");\r\ndirFolder.add(directLight, "enabled");\r\ndirFolder.addColor(directLightColor, "color").onChange((v) => (directLight.color = color2glColor(v)));\r\ndirFolder.add(directLight, "intensity", 0, 1);\r\n\r\nconst ambient = rootEntity.addComponent(AmbientLight);\r\nambient.color = new Color(0.2, 0.2, 0.2, 1);\r\n\r\n//-- create camera\r\nlet cameraNode = rootEntity.createChild("camera_node");\r\ncameraNode.transform.position = new Vector3(0, 0, 5);\r\ncameraNode.addComponent(Camera);\r\ncameraNode.addComponent(OrbitControl);\r\n\r\nPromise.all([\r\n  engine.resourceManager\r\n    .load<GLTFResource>("https://gw.alipayobjects.com/os/bmw-prod/83219f61-7d20-4704-890a-60eb92aa6159.gltf")\r\n    .then((gltf) => {\r\n      rootEntity.addChild(gltf.defaultSceneRoot);\r\n      console.log(gltf);\r\n    }),\r\n  engine.resourceManager\r\n    .load<TextureCubeMap>({\r\n      urls: [\r\n        "https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Bk5FQKGOir4AAAAAAAAAAAAAARQnAQ",\r\n        "https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_cPhR7JMDjkAAAAAAAAAAAAAARQnAQ",\r\n        "https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*trqjQp1nOMQAAAAAAAAAAAAAARQnAQ",\r\n        "https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_RXwRqwMK3EAAAAAAAAAAAAAARQnAQ",\r\n        "https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*q4Q6TroyuXcAAAAAAAAAAAAAARQnAQ",\r\n        "https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*DP5QTbTSAYgAAAAAAAAAAAAAARQnAQ"\r\n      ],\r\n      type: AssetType.TextureCube\r\n    })\r\n    .then((cubeMap) => {\r\n      envLight.diffuseTexture = cubeMap;\r\n    }),\r\n  engine.resourceManager\r\n    .load<TextureCubeMap>({\r\n      urls: [\r\n        "https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*5w6_Rr6ML6IAAAAAAAAAAAAAARQnAQ",\r\n        "https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*TiT2TbN5cG4AAAAAAAAAAAAAARQnAQ",\r\n        "https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*8GF6Q4LZefUAAAAAAAAAAAAAARQnAQ",\r\n        "https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*D5pdRqUHC3IAAAAAAAAAAAAAARQnAQ",\r\n        "https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_FooTIp6pNIAAAAAAAAAAAAAARQnAQ",\r\n        "https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*CYGZR7ogZfoAAAAAAAAAAAAAARQnAQ"\r\n      ],\r\n      type: AssetType.TextureCube\r\n    })\r\n    .then((cubeMap) => {\r\n      envLight.specularTexture = cubeMap;\r\n      rootEntity.addComponent(SkyBox).skyBoxMap = cubeMap;\r\n    })\r\n]).then(() => {\r\n  engine.run();\r\n});\r\n'}}]);