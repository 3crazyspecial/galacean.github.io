(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{503:function(n,e,r){"use strict";r.r(e),e.default='import { OrbitControl } from "@oasis-engine/controls";\r\nimport * as dat from "dat.gui";\r\nimport {\r\n  AmbientLight,\r\n  AssetType,\r\n  BlinnPhongMaterial,\r\n  Camera,\r\n  Color,\r\n  CubeProbe,\r\n  DirectLight,\r\n  EnvironmentMapLight,\r\n  GLTFResource,\r\n  Layer,\r\n  MeshRenderer,\r\n  PrimitiveMesh,\r\n  Script,\r\n  SkyBox,\r\n  SystemInfo,\r\n  TextureCubeMap,\r\n  Vector3,\r\n  WebGLEngine\r\n} from "oasis-engine";\r\n\r\n//-- create engine object\r\nconst engine = new WebGLEngine("o3-demo");\r\nengine.canvas.width = window.innerWidth * SystemInfo.devicePixelRatio;\r\nengine.canvas.height = window.innerHeight * SystemInfo.devicePixelRatio;\r\n\r\nconst scene = engine.sceneManager.activeScene;\r\nconst rootEntity = scene.createRootEntity();\r\n\r\nconst gui = new dat.GUI();\r\ngui.domElement.style = "position:absolute;top:0px;left:50vw";\r\n\r\nconst envLightNode = rootEntity.createChild("env_light");\r\nconst envLight = envLightNode.addComponent(EnvironmentMapLight);\r\n\r\nconst directLightNode = rootEntity.createChild("dir_light");\r\nconst directLight = directLightNode.addComponent(DirectLight);\r\n\r\nconst ambient = rootEntity.addComponent(AmbientLight);\r\nambient.color = new Color(0.2, 0.2, 0.2);\r\n\r\n//-- create camera\r\nconst cameraEntity = rootEntity.createChild("camera_node");\r\ncameraEntity.transform.position = new Vector3(0, 0, 5);\r\ncameraEntity.addComponent(Camera);\r\ncameraEntity.addComponent(OrbitControl);\r\n\r\nconst skybox = rootEntity.addComponent(SkyBox);\r\n\r\nasync function loadModel() {\r\n  return Promise.all([\r\n    engine.resourceManager\r\n      .load<GLTFResource>("https://gw.alipayobjects.com/os/bmw-prod/83219f61-7d20-4704-890a-60eb92aa6159.gltf")\r\n      .then((gltf) => {\r\n        rootEntity.addChild(gltf.defaultSceneRoot);\r\n        console.log(gltf);\r\n      }),\r\n    engine.resourceManager\r\n      .load<TextureCubeMap>({\r\n        urls: [\r\n          "https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Bk5FQKGOir4AAAAAAAAAAAAAARQnAQ",\r\n          "https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_cPhR7JMDjkAAAAAAAAAAAAAARQnAQ",\r\n          "https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*trqjQp1nOMQAAAAAAAAAAAAAARQnAQ",\r\n          "https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_RXwRqwMK3EAAAAAAAAAAAAAARQnAQ",\r\n          "https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*q4Q6TroyuXcAAAAAAAAAAAAAARQnAQ",\r\n          "https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*DP5QTbTSAYgAAAAAAAAAAAAAARQnAQ"\r\n        ],\r\n        type: AssetType.TextureCube\r\n      })\r\n      .then((cubeMap) => {\r\n        envLight.diffuseTexture = cubeMap;\r\n      }),\r\n    engine.resourceManager\r\n      .load<TextureCubeMap>({\r\n        urls: [\r\n          "https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*5w6_Rr6ML6IAAAAAAAAAAAAAARQnAQ",\r\n          "https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*TiT2TbN5cG4AAAAAAAAAAAAAARQnAQ",\r\n          "https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*8GF6Q4LZefUAAAAAAAAAAAAAARQnAQ",\r\n          "https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*D5pdRqUHC3IAAAAAAAAAAAAAARQnAQ",\r\n          "https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_FooTIp6pNIAAAAAAAAAAAAAARQnAQ",\r\n          "https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*CYGZR7ogZfoAAAAAAAAAAAAAARQnAQ"\r\n        ],\r\n        type: AssetType.TextureCube\r\n      })\r\n      .then((cubeMap) => {\r\n        envLight.specularTexture = cubeMap;\r\n        skybox.skyBoxMap = cubeMap;\r\n      })\r\n  ]).then(() => {});\r\n}\r\n\r\nfunction createSphere(material) {\r\n  const sphereEntity = rootEntity.createChild("sphere");\r\n  const sphereRender = sphereEntity.addComponent(MeshRenderer);\r\n  const geometry = PrimitiveMesh.createSphere(engine, 1, 64);\r\n  sphereRender.mesh = geometry;\r\n  sphereRender.setMaterial(material);\r\n  return sphereEntity;\r\n}\r\n\r\nfunction reflectionDemo() {\r\n  const sphere1Mat = new BlinnPhongMaterial(engine);\r\n  sphere1Mat.baseColor = new Color(1, 0, 0, 1);\r\n  const sphere2Mat = new BlinnPhongMaterial(engine);\r\n  sphere2Mat.baseColor = new Color(0, 1, 0, 1);\r\n  const sphere3Mat = new BlinnPhongMaterial(engine);\r\n  sphere3Mat.baseColor = new Color(0, 0, 1, 1);\r\n\r\n  const sphere1 = createSphere(sphere1Mat);\r\n  const sphere2 = createSphere(sphere2Mat);\r\n  const sphere3 = createSphere(sphere3Mat);\r\n  const aMove1 = sphere1.addComponent(MoveScript);\r\n  aMove1.radius = 4;\r\n  aMove1.onX = () => 0;\r\n  const aMove2 = sphere2.addComponent(MoveScript);\r\n  aMove2.radius = 3;\r\n  aMove2.onY = () => 0;\r\n  const aMove3 = sphere3.addComponent(MoveScript);\r\n  aMove3.onX = (time) => Math.sin(time + 2) * 5;\r\n  aMove3.onY = (time) => Math.cos(time + 2) * 5;\r\n  aMove3.onZ = () => 0;\r\n\r\n  let probe = null;\r\n\r\n  // debug\r\n  const state = {\r\n    enableAnimate: true,\r\n    enableProbe: true,\r\n    size: 1024,\r\n    samples: 1\r\n  };\r\n\r\n  probe = cameraEntity.addComponent(CubeProbe);\r\n  probe.probeLayer = Layer.Layer30;\r\n  sphere1.layer = Layer.Layer30;\r\n  sphere2.layer = Layer.Layer30;\r\n  sphere3.layer = Layer.Layer30;\r\n  rootEntity.layer = Layer.Layer30;\r\n\r\n  probe.onTextureChange = (texture) => {\r\n    envLight.specularTexture = texture;\r\n  };\r\n  gui\r\n    .add(state, "enableAnimate")\r\n    .onChange((v) => {\r\n      aMove1.enabled = v;\r\n      aMove2.enabled = v;\r\n      aMove3.enabled = v;\r\n    })\r\n    .name("\u52a8\u753b\u5f00\u5173");\r\n  gui\r\n    .add(state, "enableProbe")\r\n    .onChange((v) => {\r\n      probe.enabled = v;\r\n    })\r\n    .name("\u73af\u5883\u53cd\u5c04\u5f00\u5173");\r\n  gui\r\n    .add(state, "size", 1, 2048)\r\n    .onChange((size) => {\r\n      probe.width = probe.height = size;\r\n    })\r\n    .name("\u5206\u8fa8\u7387");\r\n\r\n  const rhi = engine._hardwareRenderer;\r\n  if (rhi.isWebGL2) {\r\n    const max = rhi.capability.maxAntiAliasing;\r\n    gui\r\n      .add(state, "samples", 0, max, 1)\r\n      .name("MSAA")\r\n      .onChange((samples) => {\r\n        probe.antiAliasing = samples;\r\n      });\r\n  }\r\n}\r\n\r\n/**\r\n * \u65cb\u8f6c\u79fb\u52a8\u811a\u672c\r\n */\r\nclass MoveScript extends Script {\r\n  time = 0;\r\n  radius = 5;\r\n  onX;\r\n  onY;\r\n  onZ;\r\n\r\n  constructor(node) {\r\n    super(node);\r\n    this.onX = (time) => {\r\n      return Math.cos(time) * this.radius;\r\n    };\r\n    this.onY = (time) => {\r\n      return Math.cos(time) * this.radius;\r\n    };\r\n    this.onZ = (time) => {\r\n      return Math.sin(time) * this.radius;\r\n    };\r\n  }\r\n\r\n  onUpdate(deltaTime) {\r\n    this.time += deltaTime / 1000;\r\n    let x = this.onX(this.time);\r\n    let y = this.onY(this.time);\r\n    let z = this.onZ(this.time);\r\n    this.entity.transform.setPosition(x, y, z);\r\n  }\r\n}\r\n\r\nloadModel().then(() => {\r\n  engine.run();\r\n  reflectionDemo();\r\n});\r\n'}}]);