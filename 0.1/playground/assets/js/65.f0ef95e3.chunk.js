(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{477:function(e,n,t){"use strict";t.r(n),n.default='import { OrbitControl } from "@oasis-engine/controls";\nimport * as dat from "dat.gui";\nimport {\n  AmbientLight,\n  AssetType,\n  Camera,\n  CubeProbe,\n  DirectLight,\n  EnvironmentMapLight,\n  GeometryRenderer,\n  LambertMaterial,\n  Script,\n  SkyBox,\n  SphereGeometry,\n  SystemInfo,\n  TextureCubeMap,\n  Vector3,\n  Vector4,\n  WebGLEngine\n} from "oasis-engine";\n\n//-- create engine object\nconst engine = new WebGLEngine("o3-demo");\nengine.canvas.width = window.innerWidth * SystemInfo.devicePixelRatio;\nengine.canvas.height = window.innerHeight * SystemInfo.devicePixelRatio;\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\nconst gui = new dat.GUI();\ngui.domElement.style = "position:absolute;top:0px;left:50vw";\n\nconst envLightNode = rootEntity.createChild("env_light");\nconst envLight = envLightNode.addComponent(EnvironmentMapLight);\n\nconst directLightNode = rootEntity.createChild("dir_light");\nconst directLight = directLightNode.addComponent(DirectLight);\ndirectLight.color = new Vector3(1, 1, 1);\n\nconst ambient = rootEntity.addComponent(AmbientLight);\nambient.color = new Vector3(0.2, 0.2, 0.2);\n\n//-- create camera\nconst cameraEntity = rootEntity.createChild("camera_node");\ncameraEntity.transform.position = new Vector3(0, 0, 5);\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl);\n\nconst skybox = rootEntity.addComponent(SkyBox);\n\nasync function loadModel() {\n  return Promise.all([\n    engine.resourceManager\n      .load("https://gw.alipayobjects.com/os/bmw-prod/83219f61-7d20-4704-890a-60eb92aa6159.gltf")\n      .then((gltf) => {\n        rootEntity.addChild(gltf.defaultSceneRoot);\n        console.log(gltf);\n      }),\n    engine.resourceManager\n      .load<TextureCubeMap>({\n        urls: [\n          "https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Bk5FQKGOir4AAAAAAAAAAAAAARQnAQ",\n          "https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_cPhR7JMDjkAAAAAAAAAAAAAARQnAQ",\n          "https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*trqjQp1nOMQAAAAAAAAAAAAAARQnAQ",\n          "https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_RXwRqwMK3EAAAAAAAAAAAAAARQnAQ",\n          "https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*q4Q6TroyuXcAAAAAAAAAAAAAARQnAQ",\n          "https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*DP5QTbTSAYgAAAAAAAAAAAAAARQnAQ"\n        ],\n        type: AssetType.TextureCube\n      })\n      .then((cubeMap) => {\n        envLight.diffuseMap = cubeMap;\n      }),\n    engine.resourceManager\n      .load<TextureCubeMap>({\n        urls: [\n          "https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*5w6_Rr6ML6IAAAAAAAAAAAAAARQnAQ",\n          "https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*TiT2TbN5cG4AAAAAAAAAAAAAARQnAQ",\n          "https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*8GF6Q4LZefUAAAAAAAAAAAAAARQnAQ",\n          "https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*D5pdRqUHC3IAAAAAAAAAAAAAARQnAQ",\n          "https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_FooTIp6pNIAAAAAAAAAAAAAARQnAQ",\n          "https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*CYGZR7ogZfoAAAAAAAAAAAAAARQnAQ"\n        ],\n        type: AssetType.TextureCube\n      })\n      .then((cubeMap) => {\n        envLight.specularMap = cubeMap;\n        skybox.skyBoxMap = cubeMap;\n      })\n  ]).then(() => {});\n}\n\nfunction createSphere(material) {\n  const sphereEntity = rootEntity.createChild("sphere");\n  const sphereRender = sphereEntity.addComponent(GeometryRenderer);\n  const geometry = new SphereGeometry(engine, 1, 64, 64);\n  sphereRender.geometry = geometry;\n  sphereRender.material = material;\n  return sphereEntity;\n}\n\nfunction reflectionDemo() {\n  const sphere1Mat = new LambertMaterial(engine, "sphere1Mat");\n  sphere1Mat.diffuse = new Vector4(1, 0, 0, 1);\n  const sphere2Mat = new LambertMaterial(engine, "sphere2Mat");\n  sphere2Mat.diffuse = new Vector4(0, 1, 0, 1);\n  const sphere3Mat = new LambertMaterial(engine, "sphere3Mat");\n  sphere3Mat.diffuse = new Vector4(0, 0, 1, 1);\n\n  const sphere1 = createSphere(sphere1Mat);\n  const sphere2 = createSphere(sphere2Mat);\n  const sphere3 = createSphere(sphere3Mat);\n  const aMove1 = sphere1.addComponent(MoveScript);\n  aMove1.radius = 4;\n  aMove1.onX = () => 0;\n  const aMove2 = sphere2.addComponent(MoveScript);\n  aMove2.radius = 3;\n  aMove2.onY = () => 0;\n  const aMove3 = sphere3.addComponent(MoveScript);\n  aMove3.onX = (time) => Math.sin(time + 2) * 5;\n  aMove3.onY = (time) => Math.cos(time + 2) * 5;\n  aMove3.onZ = () => 0;\n\n  let probe = null;\n\n  function resetProbe(width, height, samples) {\n    probe && probe.destroy();\n    probe = rootEntity.addComponent(CubeProbe);\n    probe.init({\n      width,\n      height,\n      samples,\n      // renderAll: true\n      renderList: [sphere1Mat, sphere2Mat, sphere3Mat, skybox.material]\n    });\n  }\n\n  // debug\n  const state = {\n    enableAnimate: true,\n    enableProbe: true,\n    size: 1024,\n    samples: 1\n  };\n\n  resetProbe(state.size, state.size, state.samples);\n  envLight.specularMap = probe.cubeTexture;\n\n  gui\n    .add(state, "enableAnimate")\n    .onChange((v) => {\n      aMove1.enabled = v;\n      aMove2.enabled = v;\n      aMove3.enabled = v;\n    })\n    .name("\u52a8\u753b\u5f00\u5173");\n  gui\n    .add(state, "enableProbe")\n    .onChange((v) => {\n      probe.enabled = v;\n    })\n    .name("\u73af\u5883\u53cd\u5c04\u5f00\u5173");\n  gui\n    .add(state, "size", 1, 2048)\n    .onChange((size) => {\n      resetProbe(size, size, state.samples);\n      envLight.specularMap = probe.cubeTexture;\n    })\n    .name("\u5206\u8fa8\u7387");\n\n  const rhi = engine._hardwareRenderer;\n  if (rhi.isWebGL2) {\n    const max = rhi.capability.maxAntiAliasing;\n    gui\n      .add(state, "samples", 0, max, 1)\n      .name("MSAA")\n      .onChange((samples) => {\n        resetProbe(state.size, state.size, samples);\n        envLight.specularMap = probe.cubeTexture;\n      });\n  }\n}\n\n/**\n * \u65cb\u8f6c\u79fb\u52a8\u811a\u672c\n */\nclass MoveScript extends Script {\n  time = 0;\n  radius = 5;\n  onX;\n  onY;\n  onZ;\n\n  constructor(node) {\n    super(node);\n    this.onX = (time) => {\n      return Math.cos(time) * this.radius;\n    };\n    this.onY = (time) => {\n      return Math.cos(time) * this.radius;\n    };\n    this.onZ = (time) => {\n      return Math.sin(time) * this.radius;\n    };\n  }\n\n  onUpdate(deltaTime) {\n    this.time += deltaTime / 1000;\n    let x = this.onX(this.time);\n    let y = this.onY(this.time);\n    let z = this.onZ(this.time);\n    this.entity.transform.setPosition(x, y, z);\n  }\n}\n\nloadModel().then(() => {\n  engine.run();\n  reflectionDemo();\n});\n'}}]);